classdef VectorPrinter < FieldPrinter ...
                       & NodalFieldPrinter
    
    properties (Access = private)
        fieldComponentName
    end
    
    methods (Access = public)
        
        function obj = VectorPrinter(fileID,fieldComponentName,fieldValues,fieldName,istep,fieldPosition)
            obj.fieldType = 'Vector';
            obj.init(fileID,fieldComponentName,fieldValues,fieldName,istep,fieldPosition);
            obj.print();   
        end
    end
    
    methods (Access = protected)
        
        function init(obj,fileID,fieldComponentName,fieldValues,fieldName,istep,fieldPosition,gaussDescriptor)
            obj.fileID             = fileID;
            obj.fieldComponentName = fieldComponentName;
            obj.fieldValues        = fieldValues;
            obj.fieldName          = fieldName;
            obj.istep              = istep;
            obj.fieldPosition      = fieldPosition;
        end
        
        function print(obj)
            obj.printResultsLineHeader();
            obj.printComponentNamesLine();
            obj.printValuesLine();
            obj.printFieldLines();
            obj.printEndValuesLine();
        end
        
        function printFieldLines(obj)
            iD = obj.fileID;
            fV = obj.fieldValues;
            for ielem = 1:size(fV,3)
                fprintf(iD,'%6.0f ',ielem);
                for igaus = 1:size(fV,1)
                    for istre = 1:size(fV,2)
                        fprintf(iD,'%12.5d ',fV(igaus,istre,ielem));
                    end
                    fprintf(iD,'\n');
                end
            end
        end
        
        function printComponentNamesLine(obj)
            iD = obj.fileID;
            fC = obj.fieldComponentName;
            ndim = size(obj.fieldValues,2);
            switch ndim
                case 2
                    fprintf(iD,'ComponentNames  "%sx", "%sy"\n',fC,fC);
                case 3
                    fprintf(iD,'ComponentNames "%sx", "%sy", "%sz"\n',fC,fC,fC);
            end
        end
        
    end
    
end

