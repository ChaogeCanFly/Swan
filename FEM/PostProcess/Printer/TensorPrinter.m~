classdef TensorPrinter < FieldPrinter ...
                       & GaussFieldPrinter
  
    
    properties (Access = protected)
        gaussDescriptor
        fieldType = 'Vector';
    end              
                   
    properties (Access = private)
       fieldComponentName
       nstre
       ngaus
       nelem
    end
        
    methods (Access = public)
        
        function obj = TensorPrinter(d)
            obj.nstre = size(d.fieldValues,1);
            obj.ngaus = size(d.fieldValues,2);
            obj.nelem = size(d.fieldValues,3);
            obj.init(d);
            obj.print();
        end
        
    end
    
    methods (Access = protected)
        
         function init(obj,d)
            fieldsNames = fieldnames(d);
            for ifield = 1:length(fieldsNames)
                ifieldName = fieldsNames{ifield};
                fieldValue = d.(ifieldName);
                obj.(fieldsNames{ifield}) = fieldValue;
            end
        end
                
        function print(obj)
            obj.printResultsLineHeader();
            obj.printComponentNamesLine();
            obj.printValuesLine();
            obj.printFieldLines();
            obj.printEndValuesLine();
        end
        
        function printFieldLines(obj)
           iD = obj.fileID;
           pformat = ['%s ',repmat('%12.5d ',1,obj.nstre),'\n'];
           elemColum = obj.computeElementStringColum();
           valColums = obj.computeTensorValueColums();
           str = [elemColum,valColums]';
           fprintf(iD,pformat,str{:});
        end
        
        function c = computeElementStringColum(obj)
          allElem(:,1) = 1:obj.nelem;          
          strSpaces = repmat(' ',obj.nelem,obj.ngaus -1);
          strInMatrix = [num2str(allElem),strSpaces]';
          strInCol = strInMatrix(:);
          c = cellstr(strInCol);
        end
        
        function fM = computeTensorValueColums(obj)
            fV = obj.fieldValues;
            fM  =[];
            for istre = 1:obj.nstre
                for igaus = 1:obj.ngaus
                   rows = [1:obj.ngaus:obj.nelem*] + igaus; 
                   fM(rows,istre) = 
                end
            end
            
            
            for ielem = 1:obj.nelem
                fM = [fM;fV(:,:,ielem)];
            end
            fM = num2cell(fM); 
        end
        
       function printComponentNamesLine(obj)
            iD = obj.fileID;
            fC = obj.fieldComponentName;    
            ndim = size(obj.fieldValues,2);
            switch ndim
                case 4
                 fprintf(iD,'ComponentNames  "%sx", "%sy", "%sxy", "%sz"\n',fC,fC,fC,fC);
                case 6
                 fprintf(iD,'ComponentNames "%sx", "%sy", "%sz", "%sxy", "%syz", "%sxz"\n',fC,fC,fC,fC,fC,fC);
            end
       end
       
    end
    
end

