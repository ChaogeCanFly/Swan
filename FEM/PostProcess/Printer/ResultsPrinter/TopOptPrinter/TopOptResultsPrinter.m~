classdef TopOptResultsPrinter < ResultsPrinter
    
    properties (Access = protected)
        simulationStr = 'TopOpt';
    end
    
    properties (Access = private)
        printers  
        headPrinter
        headerData
    end
    
    methods (Access = public)
        
        function obj = TopOptResultsPrinter(d,dT)
            obj.init(d);            
            obj.createHeadPrinter(d,dT.hasGaussData);
            obj.createPrinters(d,dT,dT.hasGaussData);
        end
        
    end
    
    methods (Access = protected)
        
        function init(obj,d)
            obj.init@ResultsPrinter(d.dStandard)           
        end
        
        function storeDataBase(obj,d)
            fieldsNames = fieldnames(d);
            for ifield = 1:length(fieldsNames)
                fieldName = fieldsNames{ifield};
                fieldValue = d.(fieldName);
                obj.(fieldsNames{ifield}) = fieldValue;
            end
        end
        
        function  printResults(obj)
            for iprinter = 1:numel(obj.printers)
                p = obj.printers{iprinter};
                p.print(obj.iter,obj.fields);
            end
        end
        
        function printHeader(obj)
            obj.headerData.fileID = obj.fileID;
            obj.headPrinter.print(obj.headerData);
        end
    end
    
    methods (Access = private)                
        
%         function createHeadPrinter(obj,d,hasGaussData)
%             if hasGaussData
%                 obj.headPrinter = GaussHeadPrinter;
%                 obj.headerData  = obj.createHeadPrinterDataBase(d);
%             else
%                 obj.headPrinter = NoGaussHeadPrinter;
%                 obj.headerData  = [];
%             end
%         end
        
        function hD = createHeadPrinterDataBase(obj,d)
                hD.etype = obj.etype;
                hD.ndim  = obj.ndim;
                hD.gaussDescriptor = d.dGauss.gaussDescriptor;
                hD.ngaus = d.dGauss.ngaus;
                hD.posgp = d.dGauss.posgp;
        end
        
%         function createPrinters(obj,d,dT,hasGaussData)            
%             dI.dStandard = d.dStandard;
%             dI.dStandard.ndim           = obj.ndim;
%             dI.dStandard.simulationStr  = obj.simulationStr;            
%             if hasGaussData
%                 dI.dGauss.ngaus = d.dGauss.ngaus;
%                 dI.dGauss.posgp = d.dGauss.posgp;
%                 dI.dGauss.gaussDescriptor = d.dGauss.gaussDescriptor;
%             end            
%             pM = dT.printMode;
%             sN = dT.ShapeNames;
%             opt= dT.optimizer;
%             factory = TopOptResultsPrinterFactory(dI,pM,sN,opt);
%             obj.printers = factory.getPrinters();
%         end
        
    end
    
    methods (Access = protec
    
end